{"version":3,"file":"static/js/4957.58b05db2.chunk.js","mappings":"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","sources":["../node_modules/@wormhole-foundation/wormhole-connect/lib/unsignedTransaction-BD81leu1.mjs","../node_modules/@wormhole-foundation/wormhole-connect/lib/index-6R_J7PBR.mjs"],"sourcesContent":["var c = Object.defineProperty;\nvar l = (a, i, t) => i in a ? c(a, i, { enumerable: !0, configurable: !0, writable: !0, value: t }) : a[i] = t;\nvar s = (a, i, t) => l(a, typeof i != \"symbol\" ? i + \"\" : i, t);\nclass h {\n  constructor(i, t, n, r, e = !1) {\n    s(this, \"transaction\");\n    s(this, \"network\");\n    s(this, \"chain\");\n    s(this, \"description\");\n    s(this, \"parallelizable\");\n    this.transaction = i, this.network = t, this.chain = n, this.description = r, this.parallelizable = e;\n  }\n}\nexport {\n  h as S\n};\n","var k = Object.defineProperty;\nvar v = (u, s, t) => s in u ? k(u, s, { enumerable: !0, configurable: !0, writable: !0, value: t }) : u[s] = t;\nvar i = (u, s, t) => v(u, typeof s != \"symbol\" ? s + \"\" : s, t);\nimport { T as f, w } from \"./platform-2y2sCnW0.mjs\";\nimport { i as C, D as S, b5 as _, bl as b, k as y, dl as T, aF as M } from \"./address-CmQhtpW5.mjs\";\nimport { S as x } from \"./unsignedTransaction-BD81leu1.mjs\";\nconst j = [\n  [\n    \"Testnet\",\n    {\n      tokenMessengerState: \"0x5252abd1137094ed1db3e0d75bc36abcd287aee4bc310f8e047727ef5682e7c2\",\n      messageTransmitterState: \"0x98234bd0fa9ac12cc0a20a144a22e36d6a32f7e0a97baaeaf9c76cdc6d122d2e\",\n      usdcTreasury: \"0x7170137d4a6431bf83351ac025baf462909bffe2877d87716374fb42b9629ebe\"\n    }\n  ],\n  [\n    \"Mainnet\",\n    {\n      tokenMessengerState: \"0x45993eecc0382f37419864992c12faee2238f5cfe22b98ad3bf455baf65c8a2f\",\n      messageTransmitterState: \"0xf68268c3d9b1df3215f2439400c1c4ea08ac4ef4bb7d6f3ca6a2a239e17510af\",\n      usdcTreasury: \"0x57d6725e7a8b49a7b2a612f6bd66ab5f39fc95332ca48be421c3229d514a6de7\"\n    }\n  ]\n], E = C(j, [0, 1]);\nclass p {\n  constructor(s, t, r, e) {\n    i(this, \"network\");\n    i(this, \"chain\");\n    i(this, \"provider\");\n    i(this, \"contracts\");\n    i(this, \"usdcId\");\n    i(this, \"usdcTreasuryId\");\n    i(this, \"tokenMessengerId\");\n    i(this, \"tokenMessengerStateId\");\n    i(this, \"messageTransmitterId\");\n    i(this, \"messageTransmitterStateId\");\n    var m, d, g, h;\n    if (this.network = s, this.chain = t, this.provider = r, this.contracts = e, s === \"Devnet\")\n      throw new Error(\"CircleBridge not supported on Devnet\");\n    const n = S.get(this.network, this.chain);\n    if (!n)\n      throw new Error(`No USDC contract configured for network=${this.network} chain=${this.chain}`);\n    const { tokenMessengerState: o, messageTransmitterState: a, usdcTreasury: c } = E(s);\n    if (!((m = e.cctp) != null && m.tokenMessenger))\n      throw new Error(`Circle Token Messenger contract for domain ${t} not found`);\n    if (!((d = e.cctp) != null && d.messageTransmitter))\n      throw new Error(`Circle Message Transmitter contract for domain ${t} not found`);\n    this.usdcId = n, this.usdcTreasuryId = c, this.tokenMessengerId = (g = e.cctp) == null ? void 0 : g.tokenMessenger, this.messageTransmitterId = (h = e.cctp) == null ? void 0 : h.messageTransmitter, this.tokenMessengerStateId = o, this.messageTransmitterStateId = a;\n  }\n  async *transfer(s, t, r) {\n    const e = new f(), n = _.get(this.network, t.chain), [o, ...a] = await w.getCoins(this.provider, s, this.usdcId);\n    if (o === void 0)\n      throw new Error(\"No USDC in wallet\");\n    const c = e.object(o.coinObjectId);\n    a.length > 0 && e.mergeCoins(c, a.map((d) => e.object(d.coinObjectId)));\n    const [m] = e.splitCoins(c, [r]);\n    e.moveCall({\n      target: `${this.tokenMessengerId}::deposit_for_burn::deposit_for_burn`,\n      arguments: [\n        m,\n        e.pure.u32(n),\n        // destination_domain\n        e.pure.address(t.address.toUniversalAddress().toString()),\n        // mint_recipient\n        e.object(this.tokenMessengerStateId),\n        // token_messenger_minter state\n        e.object(this.messageTransmitterStateId),\n        // message_transmitter state\n        e.object(\"0x403\"),\n        // deny_list id, fixed address\n        e.object(this.usdcTreasuryId)\n        // treasury object Treasury<USDC>\n      ],\n      typeArguments: [this.usdcId]\n    }), yield this.createUnsignedTx(e, \"Sui.CircleBridge.Transfer\");\n  }\n  async isTransferCompleted(s) {\n    const t = new f();\n    t.moveCall({\n      target: `${this.messageTransmitterId}::state::is_nonce_used`,\n      arguments: [\n        t.object(this.messageTransmitterStateId),\n        t.pure.u32(s.sourceDomain),\n        t.pure.u64(s.nonce)\n      ]\n    });\n    const r = await this.provider.devInspectTransactionBlock({\n      sender: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n      transactionBlock: t\n    });\n    try {\n      return !!r.results[0].returnValues[0][0][0];\n    } catch (e) {\n      return console.error(`Error reading if nonce was used: ${e}`), !1;\n    }\n  }\n  async *redeem(s, t, r) {\n    const e = new f(), [n] = e.moveCall({\n      target: `${this.messageTransmitterId}::receive_message::receive_message`,\n      arguments: [\n        e.pure.vector(\"u8\", b.serialize(t)),\n        e.pure.vector(\"u8\", y.decode(r)),\n        e.object(this.messageTransmitterStateId)\n        // message_transmitter state\n      ]\n    });\n    if (!n)\n      throw new Error(\"Failed to produce receipt\");\n    const [o] = e.moveCall({\n      target: `${this.tokenMessengerId}::handle_receive_message::handle_receive_message`,\n      arguments: [\n        n,\n        // Receipt object returned from receive_message call\n        e.object(this.tokenMessengerStateId),\n        // token_messenger_minter state\n        e.object(\"0x403\"),\n        // deny list, fixed address\n        e.object(this.usdcTreasuryId)\n        // usdc treasury object Treasury<T>\n      ],\n      typeArguments: [this.usdcId]\n    });\n    if (!o)\n      throw new Error(\"Failed to produce stamp receipt ticket with burn message\");\n    const [a] = e.moveCall({\n      target: `${this.tokenMessengerId}::handle_receive_message::deconstruct_stamp_receipt_ticket_with_burn_message`,\n      arguments: [o]\n    });\n    if (!a)\n      throw new Error(\"Failed to produce stamp receipt ticket\");\n    const [c] = e.moveCall({\n      target: `${this.messageTransmitterId}::receive_message::stamp_receipt`,\n      arguments: [\n        a,\n        // Receipt ticket returned from deconstruct_stamp_receipt_ticket_with_burn_message call\n        e.object(this.messageTransmitterStateId)\n        // message_transmitter state\n      ],\n      typeArguments: [\n        `${this.tokenMessengerId}::message_transmitter_authenticator::MessageTransmitterAuthenticator`\n      ]\n    });\n    if (!c)\n      throw new Error(\"Failed to produce stamped receipt\");\n    e.moveCall({\n      target: `${this.messageTransmitterId}::receive_message::complete_receive_message`,\n      arguments: [\n        c,\n        // Stamped receipt object returned from handle_receive_message call\n        e.object(this.messageTransmitterStateId)\n        // message_transmitter state\n      ]\n    }), yield this.createUnsignedTx(e, \"Sui.CircleBridge.Redeem\");\n  }\n  async parseTransactionDetails(s) {\n    var l;\n    const t = await this.provider.waitForTransaction({\n      digest: s,\n      options: { showEvents: !0, showEffects: !0, showInput: !0 }\n    });\n    if (!t)\n      throw new Error(\"Transaction not found\");\n    if (!t.events)\n      throw new Error(\"Transaction events not found\");\n    const r = (l = t.events) == null ? void 0 : l.find((I) => I.type.includes(\"send_message::MessageSent\"));\n    if (!r)\n      throw new Error(\"No MessageSent event found\");\n    const e = new Uint8Array((r == null ? void 0 : r.parsedJson).message), [n, o] = b.deserialize(e), { payload: a } = n, c = a.messageSender, m = a.mintRecipient, d = T(this.network, n.sourceDomain), g = T(this.network, n.destinationDomain), h = { chain: d, address: a.burnToken };\n    return {\n      from: { chain: d, address: c },\n      to: { chain: g, address: m },\n      token: h,\n      amount: a.amount,\n      message: n,\n      id: { hash: o }\n    };\n  }\n  static async fromRpc(s, t) {\n    const [r, e] = await w.chainFromRpc(s), n = t[e];\n    if (n.network !== r)\n      throw new Error(`Network mismatch: ${n.network} != ${r}`);\n    return new p(r, e, s, n.contracts);\n  }\n  createUnsignedTx(s, t, r = !1) {\n    return new x(s, this.network, this.chain, t, r);\n  }\n}\nM(\"Sui\", \"CircleBridge\", p);\nexport {\n  p as SuiCircleBridge,\n  j as _suiCircleObjects,\n  E as suiCircleObjects\n};\n"],"names":["c","Object","defineProperty","s","a","i","t","l","enumerable","configurable","writable","value","h","constructor","n","r","e","arguments","length","undefined","this","transaction","network","chain","description","parallelizable","k","u","v","j","tokenMessengerState","messageTransmitterState","usdcTreasury","E","C","p","m","d","g","provider","contracts","Error","S","get","concat","o","cctp","tokenMessenger","messageTransmitter","usdcId","usdcTreasuryId","tokenMessengerId","messageTransmitterId","tokenMessengerStateId","messageTransmitterStateId","transfer","_this","_wrapAsyncGenerator","f","_","_awaitAsyncGenerator","w","getCoins","object","coinObjectId","mergeCoins","map","splitCoins","moveCall","target","pure","u32","address","toUniversalAddress","toString","typeArguments","createUnsignedTx","isTransferCompleted","sourceDomain","u64","nonce","devInspectTransactionBlock","sender","transactionBlock","results","returnValues","console","error","redeem","_this2","vector","b","serialize","y","decode","parseTransactionDetails","waitForTransaction","digest","options","showEvents","showEffects","showInput","events","find","I","type","includes","Uint8Array","parsedJson","message","deserialize","payload","messageSender","mintRecipient","T","from","to","destinationDomain","token","burnToken","amount","id","hash","fromRpc","chainFromRpc","x","M"],"sourceRoot":""}