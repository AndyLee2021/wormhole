{"version":3,"file":"static/js/894.b7e79ced.chunk.js","mappings":"iLAGA,MAAMA,EAAI,CACRC,QAASC,EAAAA,GACTC,SAAUC,EAAAA,EACVC,UAAWC,EAAAA,EACXC,UAAW,CACTC,aAAcA,IAAM,wDAA+BC,KAAMC,GAAMA,EAAEC,GACjEC,YAAaA,IAAM,kEACnBC,aAAcA,IAAM,wDACpBC,WAAYA,IAAM,6EAEpBC,SAAUA,CAACL,EAAGM,EAAGC,IAAM,IAAIC,EAAAA,EAAEF,EAAG,IAAIZ,EAAAA,EAAEM,GAAGS,EAAAA,EAAAA,IAAET,EAAGU,EAAAA,GAAG,CAAE,CAACJ,GAAIC,M","sources":["../node_modules/@wormhole-foundation/wormhole-connect/lib/solana-Dt62nVQj.mjs"],"sourcesContent":["import { b as i, a as r } from \"./unsignedTransaction-DqXnNCiQ.mjs\";\nimport { g as n } from \"./signer-CilE57h1.mjs\";\nimport { aM as t, bN as s, aO as m } from \"./address-CmQhtpW5.mjs\";\nconst d = {\n  Address: t,\n  Platform: r,\n  getSigner: n,\n  protocols: {\n    WormholeCore: () => import(\"./index-GVBh659T.mjs\").then((o) => o.p),\n    TokenBridge: () => import(\"./index-QoNSBJPW.mjs\"),\n    CircleBridge: () => import(\"./index-Datu7Gd2.mjs\"),\n    TBTCBridge: () => import(\"./index-B1KaHJ_P.mjs\")\n  },\n  getChain: (o, a, e) => new i(a, new r(o, s(o, m, { [a]: e })))\n};\nexport {\n  d as default\n};\n"],"names":["d","Address","t","Platform","r","getSigner","n","protocols","WormholeCore","then","o","p","TokenBridge","CircleBridge","TBTCBridge","getChain","a","e","i","s","m"],"sourceRoot":""}